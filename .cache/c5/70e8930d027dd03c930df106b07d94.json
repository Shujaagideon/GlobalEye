{"id":"../../node_modules/split-text-js/SplitTextJS.js","dependencies":[{"name":"C:\\Users\\shuja\\OneDrive\\Desktop\\shujaahtml-files\\workFolder\\projectGlobalEye\\package.json","includedInParent":true,"mtime":1639941917344},{"name":"C:\\Users\\shuja\\OneDrive\\Desktop\\shujaahtml-files\\workFolder\\projectGlobalEye\\node_modules\\split-text-js\\package.json","includedInParent":true,"mtime":1639941915286}],"generated":{"js":"/**\n * Author: Alexandre Chabeau\n * License: MIT\n * Contact: alexandrechabeau.pro@gmail.com\n * Original repos: https://github.com/saucyspray/split-text-js\n */\nclass SplitTextJS {\n    constructor(_target) {\n        this.result = new Object()\n        this.result.originalText = _target.innerText\n        this.result.splitted = this.split(_target)\n        this.result.words = this.result.splitted.querySelectorAll('.SplitTextJS-wrapper')\n        this.result.chars = this.result.splitted.querySelectorAll('.SplitTextJS-char')\n        this.result.spaces = this.result.splitted.querySelectorAll('.SplitTextJS-spacer')\n        return this.result\n    }\n    createSpan(_class) {\n        let span = document.createElement('span')\n        span.style.display = \"inline-block\"\n        span.className = _class\n        return span\n    }\n    split(_target) {\n        let containerArray = new Array\n        const splittedTarget = _target.innerText.split(' ')\n        let counter = splittedTarget.length\n        splittedTarget.map(word => {\n            const wrapper = this.createSpan('SplitTextJS-wrapper')\n            word.split(/(?!^)/).map(char => {\n                let el = this.createSpan('SplitTextJS-char')\n                el.innerText = char\n                wrapper.appendChild(el)\n            })\n            counter--\n            containerArray.push(wrapper)\n            if (counter > 0) {\n                let space = this.createSpan('SplitTextJS-char SplitTextJS-spacer')\n                space.innerHTML = '&nbsp;'\n                containerArray.push(space)\n            }\n        })\n        _target.innerHTML = ''\n        containerArray.forEach(child => {\n            _target.appendChild(child)\n        })\n        return _target\n    }\n}\nmodule.exports = SplitTextJS;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/split-text-js/SplitTextJS.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"../../node_modules/split-text-js/SplitTextJS.js":"/**\n * Author: Alexandre Chabeau\n * License: MIT\n * Contact: alexandrechabeau.pro@gmail.com\n * Original repos: https://github.com/saucyspray/split-text-js\n */\nclass SplitTextJS {\n    constructor(_target) {\n        this.result = new Object()\n        this.result.originalText = _target.innerText\n        this.result.splitted = this.split(_target)\n        this.result.words = this.result.splitted.querySelectorAll('.SplitTextJS-wrapper')\n        this.result.chars = this.result.splitted.querySelectorAll('.SplitTextJS-char')\n        this.result.spaces = this.result.splitted.querySelectorAll('.SplitTextJS-spacer')\n        return this.result\n    }\n    createSpan(_class) {\n        let span = document.createElement('span')\n        span.style.display = \"inline-block\"\n        span.className = _class\n        return span\n    }\n    split(_target) {\n        let containerArray = new Array\n        const splittedTarget = _target.innerText.split(' ')\n        let counter = splittedTarget.length\n        splittedTarget.map(word => {\n            const wrapper = this.createSpan('SplitTextJS-wrapper')\n            word.split(/(?!^)/).map(char => {\n                let el = this.createSpan('SplitTextJS-char')\n                el.innerText = char\n                wrapper.appendChild(el)\n            })\n            counter--\n            containerArray.push(wrapper)\n            if (counter > 0) {\n                let space = this.createSpan('SplitTextJS-char SplitTextJS-spacer')\n                space.innerHTML = '&nbsp;'\n                containerArray.push(space)\n            }\n        })\n        _target.innerHTML = ''\n        containerArray.forEach(child => {\n            _target.appendChild(child)\n        })\n        return _target\n    }\n}\nmodule.exports = SplitTextJS;"},"lineCount":49}},"error":null,"hash":"78f78a415bb8052469e5ce8b957d0dc8","cacheData":{"env":{}}}